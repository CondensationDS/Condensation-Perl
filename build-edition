#! /usr/bin/perl
use strict;
use warnings;
use lib '.';
use SourceFilter;
use Build;

my $version = shift // die 'Usage: ./build-edition VERSION FLAGS*';
my $build = Build->read($version, @ARGV);

# Prepare the final code
my @output = (
	'# This is the Condensation Perl Module '.$build->version.' ('.$build->editionString.') built on '.$build->releaseDate.'.',
	'# See https://condensation.io for information about the Condensation Data System.',
	'',
	'use strict;',
	'use warnings;',
	'use 5.010000;',
	@{$build->pod},
	@{$build->allPackages},
	'',
	'package CDS::C;',
	'use Config;',
	#'use Inline (C => \'DATA\', NAME => \'CDS::C\', VERSION => \''.$version.'\', CCFLAGS => $Config{ccflags}.\' -DNDEBUG -std=gnu99\', OPTIMIZE => \'-O3\');',
	'use Inline (C => \'DATA\', CCFLAGS => $Config{ccflags}.\' -DNDEBUG -std=gnu99\', OPTIMIZE => \'-O3\');',
	'Inline->init;',
	'',
	'1;',
	'',
	'__DATA__',
	'__C__',
	@{$build->cCode},
	);

# Create the output folder if necessary
mkdir 'editions';
my $editionFolder = 'editions/'.$build->editionString('-');
mkdir $editionFolder;

# Write the CDS.pm and tags file
$build->writeLines($editionFolder.'/CDS.pm', @output);
$build->writeGeanyTags($editionFolder.'/CDS.pm.tags');

# Write the cds file
@output = (
	'#! /usr/bin/perl',
	'',
	'# This is the Condensation Perl Module '.$build->version.' ('.$build->editionString.') built on '.$build->releaseDate.'.',
	'# See https://condensation.io for information about the Condensation Data System.',
	'',
	'use strict;',
	'use warnings;',
	'use File::Basename;',
	'use lib dirname(__FILE__);',
	'use CDS;',
	'',
	'my $exitCode = CDS::CLI->run;',
	'exit($exitCode);',
	);

$build->writeLines($editionFolder.'/cds', @output);
chmod 0755, $editionFolder.'/cds';

print 'CDS.pm ', $build->version, ' ', $build->editionString, ' built, ', $build->countSections, ' packages', "\n";
