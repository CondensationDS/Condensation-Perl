# BEGIN AUTOGENERATED

sub register($class, $cds, $help) {
	my $node000 = CDS::Parser::Node->new(0);
	my $node001 = CDS::Parser::Node->new(0);
	my $node002 = CDS::Parser::Node->new(0);
	my $node003 = CDS::Parser::Node->new(1, {constructor => \&new, function => \&help});
	my $node004 = CDS::Parser::Node->new(1, {constructor => \&new, function => \&useCache});
	my $node005 = CDS::Parser::Node->new(1, {constructor => \&new, function => \&dropCache});
	my $node006 = CDS::Parser::Node->new(1, {constructor => \&new, function => \&cache});
	$cds->addArrow($node000, 1, 0, 'use');
	$cds->addArrow($node002, 1, 0, 'drop');
	$cds->addArrow($node006, 1, 0, 'cache');
	$help->addArrow($node003, 1, 0, 'cache');
	$node000->addArrow($node001, 1, 0, 'cache');
	$node001->addArrow($node004, 1, 0, 'STORE', \&collectStore);
	$node002->addArrow($node005, 1, 0, 'cache');
}

sub collectStore($o, $label, $value) {
	$o:store = $value;
}

sub new($class, $actor) { bless {actor => $actor, ui => $actor->ui} }

# END AUTOGENERATED

# HTML FOLDER NAME use-cache
# HTML TITLE Using a cache store
sub help($o, $cmd) {
	my $ui = $o:ui;
	$ui->space;
	$ui->command('cds use cache STORE');
	$ui->p('Uses STORE to cache objects, and speed up subsequent requests of the same object. This is particularly useful when working with (slow) remote stores. The cache store should be a fast store, such as a local folder store or an in-memory store.');
	$ui->p('Cached objects are not linked to any account, and may disappear with the next garbage collection. Most stores however keep objects for a least a few hours after their last use.');
	$ui->space;
	$ui->command('cds drop cache');
	$ui->p('Stops using the cache.');
	$ui->space;
	$ui->command('cds cache');
	$ui->p('Shows which cache store is used (if any).');
	$ui->space;
}

sub useCache($o, $cmd) {
	$cmd->collect($o);

	$o:actor->sessionRoot->child('use cache')->setText($o:store->url);
	$o:actor->saveOrShowError // return;
	$o:ui->pGreen('Using store "', $o:store->url, '" to cache objects.');
}

sub dropCache($o, $cmd) {
	$o:actor->sessionRoot->child('use cache')->clear;
	$o:actor->saveOrShowError // return;
	$o:ui->pGreen('Not using any cache any more.');
}

sub cache($o, $cmd) {
	my $storeUrl = $o:actor->sessionRoot->child('use cache')->textValue;
	return $o:ui->line('Not using any cache.') if ! length $storeUrl;
	return $o:ui->line('Using store "', $storeUrl, '" to cache objects.');
}
